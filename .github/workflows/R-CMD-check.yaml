# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
#
# NOTE: This workflow is overkill for most R packages and
# check-standard.yaml is likely a better choice.
# usethis::use_github_action("check-standard") will install it.
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }}) ${{ matrix.config.custom }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-13,       r: 'oldrel'}
          - {os: macos-latest,   r: 'release'}

          - {os: windows-latest, r: 'release'}
          # use 4.1 to check with rtools40's older compiler
          - {os: windows-latest, r: '4.1'}

          - {os: ubuntu-latest,   r: 'release', custom: 'clang-format'}
          
          # Use older ubuntu to maximise backward compatibility
          - {os: ubuntu-22.04,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-22.04,   r: 'release', custom: 'no-cpp4rtest'}
          - {os: ubuntu-22.04,   r: 'oldrel-1'}
          - {os: ubuntu-22.04,   r: 'oldrel-2'}
          - {os: ubuntu-22.04,   r: 'oldrel-3'}
          - {os: ubuntu-22.04,   r: 'oldrel-4'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: pachadotdev/clang-format@main
        if: matrix.config.custom == 'clang-format'
        with:
          version: '18'
          files: 'src/*.cpp src/*.h inst/include/*.h'
          auto-commit: true
          commit-message: 'style: format C++ code in R package'

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Install macOS system dependencies
        if: runner.os == 'macOS'
        run: brew install --cask xquartz

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          pak-version: devel
          needs: check

      - name: Install cpp4rtest
        if: matrix.config.custom != 'no-cpp4rtest'
        run: |
          options(warn = 2)
          pak::local_install_dev_deps("cpp4rtest", dependencies = TRUE)
          install.packages(".", repos = NULL, type = "source")
          install.packages("cpp4rtest", repos = NULL, INSTALL_opts = "--install-tests", type = "source")
        shell: Rscript {0}

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'

      - name: Run cpp4rtest tests
        if: matrix.config.custom != 'no-cpp4rtest'
        run: |
          setwd("cpp4rtest/tests")
          library(testthat)
          library(cpp4rtest)
          test_check("cpp4rtest", reporter = "progress")
        shell: Rscript {0}
