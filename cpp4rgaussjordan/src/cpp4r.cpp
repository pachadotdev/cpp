// Generated by cpp4r: do not edit by hand
// clang-format off


#include "cpp4r/declarations.hpp"
#include <R_ext/Visibility.h>

// code.cpp
doubles_matrix<> invert_matrix_(doubles_matrix<> A);
extern "C" SEXP _cpp4rgaussjordan_invert_matrix_(SEXP A) {
  BEGIN_CPP4R
    return cpp4r::as_sexp(invert_matrix_(cpp4r::as_cpp<cpp4r::decay_t<doubles_matrix<>>>(A)));
  END_CPP4R
}
// code.cpp
doubles_matrix<> solve_system_(doubles_matrix<> A, doubles_matrix<> b);
extern "C" SEXP _cpp4rgaussjordan_solve_system_(SEXP A, SEXP b) {
  BEGIN_CPP4R
    return cpp4r::as_sexp(solve_system_(cpp4r::as_cpp<cpp4r::decay_t<doubles_matrix<>>>(A), cpp4r::as_cpp<cpp4r::decay_t<doubles_matrix<>>>(b)));
  END_CPP4R
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_cpp4rgaussjordan_invert_matrix_", (DL_FUNC) &_cpp4rgaussjordan_invert_matrix_, 1},
    {"_cpp4rgaussjordan_solve_system_",  (DL_FUNC) &_cpp4rgaussjordan_solve_system_,  2},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_cpp4rgaussjordan(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
