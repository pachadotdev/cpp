// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rejection_sampling_Rcpp_
NumericVector rejection_sampling_Rcpp_(int n_samples, double mu, double sigma, double lower, double upper);
RcppExport SEXP _Rcppsampling_rejection_sampling_Rcpp_(SEXP n_samplesSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP lowerSEXP, SEXP upperSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_samples(n_samplesSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    rcpp_result_gen = Rcpp::wrap(rejection_sampling_Rcpp_(n_samples, mu, sigma, lower, upper));
    return rcpp_result_gen;
END_RCPP
}
// bootstrap_variable_Rcpp_
List bootstrap_variable_Rcpp_(NumericVector data, int min_size, int max_size, int n_bootstrap);
RcppExport SEXP _Rcppsampling_bootstrap_variable_Rcpp_(SEXP dataSEXP, SEXP min_sizeSEXP, SEXP max_sizeSEXP, SEXP n_bootstrapSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type min_size(min_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type max_size(max_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type n_bootstrap(n_bootstrapSEXP);
    rcpp_result_gen = Rcpp::wrap(bootstrap_variable_Rcpp_(data, min_size, max_size, n_bootstrap));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Rcppsampling_rejection_sampling_Rcpp_", (DL_FUNC) &_Rcppsampling_rejection_sampling_Rcpp_, 5},
    {"_Rcppsampling_bootstrap_variable_Rcpp_", (DL_FUNC) &_Rcppsampling_bootstrap_variable_Rcpp_, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_Rcppsampling(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
