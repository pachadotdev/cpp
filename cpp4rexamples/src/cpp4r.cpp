// Generated by cpp4r: do not edit by hand
// clang-format off


#include "cpp4r/declarations.hpp"
#include <R_ext/Visibility.h>

// 01_plus_one.h
int plus_one(int x);
extern "C" SEXP _cpp4rexamples_plus_one(SEXP x) {
  BEGIN_CPP4R
    return cpp4r::as_sexp(plus_one(cpp4r::as_cpp<cpp4r::decay_t<int>>(x)));
  END_CPP4R
}
// 02_plus_two.h
double plus_two(double x);
extern "C" SEXP _cpp4rexamples_plus_two(SEXP x) {
  BEGIN_CPP4R
    return cpp4r::as_sexp(plus_two(cpp4r::as_cpp<cpp4r::decay_t<double>>(x)));
  END_CPP4R
}
// 03_sign.h
int sign_cpp(double x);
extern "C" SEXP _cpp4rexamples_sign_cpp(SEXP x) {
  BEGIN_CPP4R
    return cpp4r::as_sexp(sign_cpp(cpp4r::as_cpp<cpp4r::decay_t<double>>(x)));
  END_CPP4R
}
// 04_square_coordinates.h
integers square_coordinates(integers x);
extern "C" SEXP _cpp4rexamples_square_coordinates(SEXP x) {
  BEGIN_CPP4R
    return cpp4r::as_sexp(square_coordinates(cpp4r::as_cpp<cpp4r::decay_t<integers>>(x)));
  END_CPP4R
}
// 04_square_coordinates.h
integers square_coordinates_2(writable::integers x);
extern "C" SEXP _cpp4rexamples_square_coordinates_2(SEXP x) {
  BEGIN_CPP4R
    return cpp4r::as_sexp(square_coordinates_2(cpp4r::as_cpp<cpp4r::decay_t<writable::integers>>(x)));
  END_CPP4R
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_cpp4rexamples_plus_one",             (DL_FUNC) &_cpp4rexamples_plus_one,             1},
    {"_cpp4rexamples_plus_two",             (DL_FUNC) &_cpp4rexamples_plus_two,             1},
    {"_cpp4rexamples_sign_cpp",             (DL_FUNC) &_cpp4rexamples_sign_cpp,             1},
    {"_cpp4rexamples_square_coordinates",   (DL_FUNC) &_cpp4rexamples_square_coordinates,   1},
    {"_cpp4rexamples_square_coordinates_2", (DL_FUNC) &_cpp4rexamples_square_coordinates_2, 1},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_cpp4rexamples(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
